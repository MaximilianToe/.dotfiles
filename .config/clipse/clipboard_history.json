{"clipboardHistory":[{"value":"vim.api.nvim_create_autocmd('User', {\n  pattern = 'NoiceOperationDone',\n  callback = function()\n    vim.cmd('NoiceDismiss')\n  end\n})","recorded":"2024-11-27 18:25:03.401188271","filePath":"null","pinned":false},{"value":"    message = {\n      -- Messages shown by lsp servers\n      enabled = true,\n      view = \"notify\",\n      opts = {},\n    },","recorded":"2024-11-27 18:17:40.582278709","filePath":"null","pinned":false},{"value":"  popupmenu = {\n    enabled = true, -- enables the Noice popupmenu UI\n    ---@type 'nui'|'cmp'\n    backend = \"nui\", -- backend to use to show regular cmdline completions\n    ---@type NoicePopupmenuItemKind|false\n    -- Icons for completion item kinds (see defaults at noice.config.icons.kinds)\n    kind_icons = {}, -- set to `false` to disable icons\n  },","recorded":"2024-11-27 18:15:16.326067636","filePath":"null","pinned":false},{"value":"require(\"noice\").setup({\n  lsp = {\n    -- override markdown rendering so that **cmp** and other plugins use **Treesitter**\n    override = {\n      [\"vim.lsp.util.convert_input_to_markdown_lines\"] = true,\n      [\"vim.lsp.util.stylize_markdown\"] = true,\n      [\"cmp.entry.get_documentation\"] = true, -- requires hrsh7th/nvim-cmp\n    },\n  },\n  -- you can enable a preset for easier configuration\n  presets = {\n    bottom_search = true, -- use a classic bottom cmdline for search\n    command_palette = true, -- position the cmdline and popupmenu together\n    long_message_to_split = true, -- long messages will be sent to a split\n    inc_rename = false, -- enables an input dialog for inc-rename.nvim\n    lsp_doc_border = false, -- add a border to hover docs and signature help\n  },\n})","recorded":"2024-11-27 18:14:42.792530118","filePath":"null","pinned":false},{"value":"{\n  cmdline = {\n    enabled = true, -- enables the Noice cmdline UI\n    view = \"cmdline_popup\", -- view for rendering the cmdline. Change to `cmdline` to get a classic cmdline at the bottom\n    opts = {}, -- global options for the cmdline. See section on views\n    ---@type table\u003cstring, CmdlineFormat\u003e\n    format = {\n      -- conceal: (default=true) This will hide the text in the cmdline that matches the pattern.\n      -- view: (default is cmdline view)\n      -- opts: any options passed to the view\n      -- icon_hl_group: optional hl_group for the icon\n      -- title: set to anything or empty string to hide\n      cmdline = { pattern = \"^:\", icon = \"\", lang = \"vim\" },\n      search_down = { kind = \"search\", pattern = \"^/\", icon = \" \", lang = \"regex\" },\n      search_up = { kind = \"search\", pattern = \"^%?\", icon = \" \", lang = \"regex\" },\n      filter = { pattern = \"^:%s*!\", icon = \"$\", lang = \"bash\" },\n      lua = { pattern = { \"^:%s*lua%s+\", \"^:%s*lua%s*=%s*\", \"^:%s*=%s*\" }, icon = \"\", lang = \"lua\" },\n      help = { pattern = \"^:%s*he?l?p?%s+\", icon = \"\" },\n      input = { view = \"cmdline_input\", icon = \"󰥻 \" }, -- Used by input()\n      -- lua = false, -- to disable a format, set to `false`\n    },\n  },\n  messages = {\n    -- NOTE: If you enable messages, then the cmdline is enabled automatically.\n    -- This is a current Neovim limitation.\n    enabled = true, -- enables the Noice messages UI\n    view = \"notify\", -- default view for messages\n    view_error = \"notify\", -- view for errors\n    view_warn = \"notify\", -- view for warnings\n    view_history = \"messages\", -- view for :messages\n    view_search = \"virtualtext\", -- view for search count messages. Set to `false` to disable\n  },\n  popupmenu = {\n    enabled = true, -- enables the Noice popupmenu UI\n    ---@type 'nui'|'cmp'\n    backend = \"nui\", -- backend to use to show regular cmdline completions\n    ---@type NoicePopupmenuItemKind|false\n    -- Icons for completion item kinds (see defaults at noice.config.icons.kinds)\n    kind_icons = {}, -- set to `false` to disable icons\n  },\n  -- default options for require('noice').redirect\n  -- see the section on Command Redirection\n  ---@type NoiceRouteConfig\n  redirect = {\n    view = \"popup\",\n    filter = { event = \"msg_show\" },\n  },\n  -- You can add any custom commands below that will be available with `:Noice command`\n  ---@type table\u003cstring, NoiceCommand\u003e\n  commands = {\n    history = {\n      -- options for the message history that you get with `:Noice`\n      view = \"split\",\n      opts = { enter = true, format = \"details\" },\n      filter = {\n        any = {\n          { event = \"notify\" },\n          { error = true },\n          { warning = true },\n          { event = \"msg_show\", kind = { \"\" } },\n          { event = \"lsp\", kind = \"message\" },\n        },\n      },\n    },\n    -- :Noice last\n    last = {\n      view = \"popup\",\n      opts = { enter = true, format = \"details\" },\n      filter = {\n        any = {\n          { event = \"notify\" },\n          { error = true },\n          { warning = true },\n          { event = \"msg_show\", kind = { \"\" } },\n          { event = \"lsp\", kind = \"message\" },\n        },\n      },\n      filter_opts = { count = 1 },\n    },\n    -- :Noice errors\n    errors = {\n      -- options for the message history that you get with `:Noice`\n      view = \"popup\",\n      opts = { enter = true, format = \"details\" },\n      filter = { error = true },\n      filter_opts = { reverse = true },\n    },\n    all = {\n      -- options for the message history that you get with `:Noice`\n      view = \"split\",\n      opts = { enter = true, format = \"details\" },\n      filter = {},\n    },\n  },\n  notify = {\n    -- Noice can be used as `vim.notify` so you can route any notification like other messages\n    -- Notification messages have their level and other properties set.\n    -- event is always \"notify\" and kind can be any log level as a string\n    -- The default routes will forward notifications to nvim-notify\n    -- Benefit of using Noice for this is the routing and consistent history view\n    enabled = true,\n    view = \"notify\",\n  },\n  lsp = {\n    progress = {\n      enabled = true,\n      -- Lsp Progress is formatted using the builtins for lsp_progress. See config.format.builtin\n      -- See the section on formatting for more details on how to customize.\n      --- @type NoiceFormat|string\n      format = \"lsp_progress\",\n      --- @type NoiceFormat|string\n      format_done = \"lsp_progress_done\",\n      throttle = 1000 / 30, -- frequency to update lsp progress message\n      view = \"mini\",\n    },\n    override = {\n      -- override the default lsp markdown formatter with Noice\n      [\"vim.lsp.util.convert_input_to_markdown_lines\"] = false,\n      -- override the lsp markdown formatter with Noice\n      [\"vim.lsp.util.stylize_markdown\"] = false,\n      -- override cmp documentation with Noice (needs the other options to work)\n      [\"cmp.entry.get_documentation\"] = false,\n    },\n    hover = {\n      enabled = true,\n      silent = false, -- set to true to not show a message if hover is not available\n      view = nil, -- when nil, use defaults from documentation\n      ---@type NoiceViewOptions\n      opts = {}, -- merged with defaults from documentation\n    },\n    signature = {\n      enabled = true,\n      auto_open = {\n        enabled = true,\n        trigger = true, -- Automatically show signature help when typing a trigger character from the LSP\n        luasnip = true, -- Will open signature help when jumping to Luasnip insert nodes\n        throttle = 50, -- Debounce lsp signature help request by 50ms\n      },\n      view = nil, -- when nil, use defaults from documentation\n      ---@type NoiceViewOptions\n      opts = {}, -- merged with defaults from documentation\n    },\n    message = {\n      -- Messages shown by lsp servers\n      enabled = true,\n      view = \"notify\",\n      opts = {},\n    },\n    -- defaults for hover and signature help\n    documentation = {\n      view = \"hover\",\n      ---@type NoiceViewOptions\n      opts = {\n        lang = \"markdown\",\n        replace = true,\n        render = \"plain\",\n        format = { \"{message}\" },\n        win_options = { concealcursor = \"n\", conceallevel = 3 },\n      },\n    },\n  },\n  markdown = {\n    hover = {\n      [\"|(%S-)|\"] = vim.cmd.help, -- vim help links\n      [\"%[.-%]%((%S-)%)\"] = require(\"noice.util\").open, -- markdown links\n    },\n    highlights = {\n      [\"|%S-|\"] = \"@text.reference\",\n      [\"@%S+\"] = \"@parameter\",\n      [\"^%s*(Parameters:)\"] = \"@text.title\",\n      [\"^%s*(Return:)\"] = \"@text.title\",\n      [\"^%s*(See also:)\"] = \"@text.title\",\n      [\"{%S-}\"] = \"@parameter\",\n    },\n  },\n  health = {\n    checker = true, -- Disable if you don't want health checks to run\n  },\n  ---@type NoicePresets\n  presets = {\n    -- you can enable a preset by setting it to true, or a table that will override the preset config\n    -- you can also add custom presets that you can enable/disable with enabled=true\n    bottom_search = false, -- use a classic bottom cmdline for search\n    command_palette = false, -- position the cmdline and popupmenu together\n    long_message_to_split = false, -- long messages will be sent to a split\n    inc_rename = false, -- enables an input dialog for inc-rename.nvim\n    lsp_doc_border = false, -- add a border to hover docs and signature help\n  },\n  throttle = 1000 / 30, -- how frequently does Noice need to check for ui updates? This has no effect when in blocking mode.\n  ---@type NoiceConfigViews\n  views = {}, ---@see section on views\n  ---@type NoiceRouteConfig[]\n  routes = {}, --- @see section on routes\n  ---@type table\u003cstring, NoiceFilter\u003e\n  status = {}, --- @see section on statusline components\n  ---@type NoiceFormatOptions\n  format = {}, --- @see section on formatting\n}","recorded":"2024-11-27 18:12:48.066967406","filePath":"null","pinned":false},{"value":"-- lazy.nvim\n{\n  \"folke/noice.nvim\",\n  event = \"VeryLazy\",\n  opts = {\n    -- add any options here\n  },\n  dependencies = {\n    -- if you lazy-load any plugin below, make sure to add proper `module=\"...\"` entries\n    \"MunifTanjim/nui.nvim\",\n    -- OPTIONAL:\n    --   `nvim-notify` is only needed, if you want to use the notification view.\n    --   If not available, we use `mini` as the fallback\n    \"rcarriga/nvim-notify\",\n    }\n}","recorded":"2024-11-27 18:12:31.336863622","filePath":"null","pinned":false},{"value":"{\n    'nvim-lualine/lualine.nvim',\n    dependencies = { 'nvim-tree/nvim-web-devicons' }\n}","recorded":"2024-11-27 17:56:47.427486727","filePath":"null","pinned":false},{"value":"  dependencies = {\n    -- if you lazy-load any plugin below, make sure to add proper `module=\"...\"` entries\n    \"MunifTanjim/nui.nvim\",\n    -- OPTIONAL:\n    --   `nvim-notify` is only needed, if you want to use the notification view.\n    --   If not available, we use `mini` as the fallback\n    \"rcarriga/nvim-notify\",\n    }","recorded":"2024-11-27 17:50:01.720211661","filePath":"null","pinned":false},{"value":"{\n  \"folke/snacks.nvim\",\n  opts = {\n    dashboard = {\n      preset = {\n        header = [[\n        ██╗      █████╗ ███████╗██╗   ██╗██╗   ██╗██╗███╗   ███╗          Z\n        ██║     ██╔══██╗╚══███╔╝╚██╗ ██╔╝██║   ██║██║████╗ ████║      Z    \n        ██║     ███████║  ███╔╝  ╚████╔╝ ██║   ██║██║██╔████╔██║   z       \n        ██║     ██╔══██║ ███╔╝    ╚██╔╝  ╚██╗ ██╔╝██║██║╚██╔╝██║ z         \n        ███████╗██║  ██║███████╗   ██║    ╚████╔╝ ██║██║ ╚═╝ ██║           \n        ╚══════╝╚═╝  ╚═╝╚══════╝   ╚═╝     ╚═══╝  ╚═╝╚═╝     ╚═╝           \n ]],\n        -- stylua: ignore\n        ---@type snacks.dashboard.Item[]\n        keys = {\n          { icon = \" \", key = \"f\", desc = \"Find File\", action = \":lua Snacks.dashboard.pick('files')\" },\n          { icon = \" \", key = \"n\", desc = \"New File\", action = \":ene | startinsert\" },\n          { icon = \" \", key = \"g\", desc = \"Find Text\", action = \":lua Snacks.dashboard.pick('live_grep')\" },\n          { icon = \" \", key = \"r\", desc = \"Recent Files\", action = \":lua Snacks.dashboard.pick('oldfiles')\" },\n          { icon = \" \", key = \"c\", desc = \"Config\", action = \":lua Snacks.dashboard.pick('files', {cwd = vim.fn.stdpath('config')})\" },\n          { icon = \" \", key = \"s\", desc = \"Restore Session\", section = \"session\" },\n          { icon = \" \", key = \"x\", desc = \"Lazy Extras\", action = \":LazyExtras\" },\n          { icon = \"󰒲 \", key = \"l\", desc = \"Lazy\", action = \":Lazy\" },\n          { icon = \" \", key = \"q\", desc = \"Quit\", action = \":qa\" },\n        },\n      },\n    },\n  },\n}","recorded":"2024-11-27 17:32:38.481477081","filePath":"null","pinned":false},{"value":"{ \"MunifTanjim/nui.nvim\", lazy = true }","recorded":"2024-11-27 17:32:22.41792328","filePath":"null","pinned":false},{"value":"{\n  \"echasnovski/mini.icons\",\n  lazy = true,\n  opts = {\n    file = {\n      [\".keep\"] = { glyph = \"󰊢\", hl = \"MiniIconsGrey\" },\n      [\"devcontainer.json\"] = { glyph = \"\", hl = \"MiniIconsAzure\" },\n    },\n    filetype = {\n      dotenv = { glyph = \"\", hl = \"MiniIconsYellow\" },\n    },\n  },\n  init = function()\n    package.preload[\"nvim-web-devicons\"] = function()\n      require(\"mini.icons\").mock_nvim_web_devicons()\n      return package.loaded[\"nvim-web-devicons\"]\n    end\n  end,\n}","recorded":"2024-11-27 17:32:04.526192059","filePath":"null","pinned":false},{"value":"{\n  \"lukas-reineke/indent-blankline.nvim\",\n  event = \"LazyFile\",\n  opts = function()\n    Snacks.toggle({\n      name = \"Indention Guides\",\n      get = function()\n        return require(\"ibl.config\").get_config(0).enabled\n      end,\n      set = function(state)\n        require(\"ibl\").setup_buffer(0, { enabled = state })\n      end,\n    }):map(\"\u003cleader\u003eug\")\n\n    return {\n      indent = {\n        char = \"│\",\n        tab_char = \"│\",\n      },\n      scope = { show_start = false, show_end = false },\n      exclude = {\n        filetypes = {\n          \"Trouble\",\n          \"alpha\",\n          \"dashboard\",\n          \"help\",\n          \"lazy\",\n          \"mason\",\n          \"neo-tree\",\n          \"notify\",\n          \"snacks_dashboard\",\n          \"snacks_notif\",\n          \"snacks_terminal\",\n          \"snacks_win\",\n          \"toggleterm\",\n          \"trouble\",\n        },\n      },\n    }\n  end,\n  main = \"ibl\",\n}","recorded":"2024-11-27 17:31:32.289240879","filePath":"null","pinned":false},{"value":"{\n  \"nvim-lualine/lualine.nvim\",\n  event = \"VeryLazy\",\n  init = function()\n    vim.g.lualine_laststatus = vim.o.laststatus\n    if vim.fn.argc(-1) \u003e 0 then\n      -- set an empty statusline till lualine loads\n      vim.o.statusline = \" \"\n    else\n      -- hide the statusline on the starter page\n      vim.o.laststatus = 0\n    end\n  end,\n  opts = function()\n    -- PERF: we don't need this lualine require madness 🤷\n    local lualine_require = require(\"lualine_require\")\n    lualine_require.require = require\n\n    local icons = LazyVim.config.icons\n\n    vim.o.laststatus = vim.g.lualine_laststatus\n\n    local opts = {\n      options = {\n        theme = \"auto\",\n        globalstatus = vim.o.laststatus == 3,\n        disabled_filetypes = { statusline = { \"dashboard\", \"alpha\", \"ministarter\", \"snacks_dashboard\" } },\n      },\n      sections = {\n        lualine_a = { \"mode\" },\n        lualine_b = { \"branch\" },\n\n        lualine_c = {\n          LazyVim.lualine.root_dir(),\n          {\n            \"diagnostics\",\n            symbols = {\n              error = icons.diagnostics.Error,\n              warn = icons.diagnostics.Warn,\n              info = icons.diagnostics.Info,\n              hint = icons.diagnostics.Hint,\n            },\n          },\n          { \"filetype\", icon_only = true, separator = \"\", padding = { left = 1, right = 0 } },\n          { LazyVim.lualine.pretty_path() },\n        },\n        lualine_x = {\n          -- stylua: ignore\n          {\n            function() return require(\"noice\").api.status.command.get() end,\n            cond = function() return package.loaded[\"noice\"] and require(\"noice\").api.status.command.has() end,\n            color = function() return LazyVim.ui.fg(\"Statement\") end,\n          },\n          -- stylua: ignore\n          {\n            function() return require(\"noice\").api.status.mode.get() end,\n            cond = function() return package.loaded[\"noice\"] and require(\"noice\").api.status.mode.has() end,\n            color = function() return LazyVim.ui.fg(\"Constant\") end,\n          },\n          -- stylua: ignore\n          {\n            function() return \"  \" .. require(\"dap\").status() end,\n            cond = function() return package.loaded[\"dap\"] and require(\"dap\").status() ~= \"\" end,\n            color = function() return LazyVim.ui.fg(\"Debug\") end,\n          },\n          -- stylua: ignore\n          {\n            require(\"lazy.status\").updates,\n            cond = require(\"lazy.status\").has_updates,\n            color = function() return LazyVim.ui.fg(\"Special\") end,\n          },\n          {\n            \"diff\",\n            symbols = {\n              added = icons.git.added,\n              modified = icons.git.modified,\n              removed = icons.git.removed,\n            },\n            source = function()\n              local gitsigns = vim.b.gitsigns_status_dict\n              if gitsigns then\n                return {\n                  added = gitsigns.added,\n                  modified = gitsigns.changed,\n                  removed = gitsigns.removed,\n                }\n              end\n            end,\n          },\n        },\n        lualine_y = {\n          { \"progress\", separator = \" \", padding = { left = 1, right = 0 } },\n          { \"location\", padding = { left = 0, right = 1 } },\n        },\n        lualine_z = {\n          function()\n            return \" \" .. os.date(\"%R\")\n          end,\n        },\n      },\n      extensions = { \"neo-tree\", \"lazy\" },\n    }\n\n    -- do not add trouble symbols if aerial is enabled\n    -- And allow it to be overriden for some buffer types (see autocmds)\n    if vim.g.trouble_lualine and LazyVim.has(\"trouble.nvim\") then\n      local trouble = require(\"trouble\")\n      local symbols = trouble.statusline({\n        mode = \"symbols\",\n        groups = {},\n        title = false,\n        filter = { range = true },\n        format = \"{kind_icon}{symbol.name:Normal}\",\n        hl_group = \"lualine_c_normal\",\n      })\n      table.insert(opts.sections.lualine_c, {\n        symbols and symbols.get,\n        cond = function()\n          return vim.b.trouble_lualine ~= false and symbols.has()\n        end,\n      })\n    end\n\n    return opts\n  end,\n}","recorded":"2024-11-27 17:31:12.427001181","filePath":"null","pinned":false},{"value":"{\n  \"akinsho/bufferline.nvim\",\n  event = \"VeryLazy\",\n  keys = {\n    { \"\u003cleader\u003ebp\", \"\u003cCmd\u003eBufferLineTogglePin\u003cCR\u003e\", desc = \"Toggle Pin\" },\n    { \"\u003cleader\u003ebP\", \"\u003cCmd\u003eBufferLineGroupClose ungrouped\u003cCR\u003e\", desc = \"Delete Non-Pinned Buffers\" },\n    { \"\u003cleader\u003ebr\", \"\u003cCmd\u003eBufferLineCloseRight\u003cCR\u003e\", desc = \"Delete Buffers to the Right\" },\n    { \"\u003cleader\u003ebl\", \"\u003cCmd\u003eBufferLineCloseLeft\u003cCR\u003e\", desc = \"Delete Buffers to the Left\" },\n    { \"\u003cS-h\u003e\", \"\u003ccmd\u003eBufferLineCyclePrev\u003ccr\u003e\", desc = \"Prev Buffer\" },\n    { \"\u003cS-l\u003e\", \"\u003ccmd\u003eBufferLineCycleNext\u003ccr\u003e\", desc = \"Next Buffer\" },\n    { \"[b\", \"\u003ccmd\u003eBufferLineCyclePrev\u003ccr\u003e\", desc = \"Prev Buffer\" },\n    { \"]b\", \"\u003ccmd\u003eBufferLineCycleNext\u003ccr\u003e\", desc = \"Next Buffer\" },\n    { \"[B\", \"\u003ccmd\u003eBufferLineMovePrev\u003ccr\u003e\", desc = \"Move buffer prev\" },\n    { \"]B\", \"\u003ccmd\u003eBufferLineMoveNext\u003ccr\u003e\", desc = \"Move buffer next\" },\n  },\n  opts = {\n    options = {\n      -- stylua: ignore\n      close_command = function(n) Snacks.bufdelete(n) end,\n      -- stylua: ignore\n      right_mouse_command = function(n) Snacks.bufdelete(n) end,\n      diagnostics = \"nvim_lsp\",\n      always_show_bufferline = false,\n      diagnostics_indicator = function(_, _, diag)\n        local icons = LazyVim.config.icons.diagnostics\n        local ret = (diag.error and icons.Error .. diag.error .. \" \" or \"\")\n          .. (diag.warning and icons.Warn .. diag.warning or \"\")\n        return vim.trim(ret)\n      end,\n      offsets = {\n        {\n          filetype = \"neo-tree\",\n          text = \"Neo-tree\",\n          highlight = \"Directory\",\n          text_align = \"left\",\n        },\n      },\n      ---@param opts bufferline.IconFetcherOpts\n      get_element_icon = function(opts)\n        return LazyVim.config.icons.ft[opts.filetype]\n      end,\n    },\n  },\n  config = function(_, opts)\n    require(\"bufferline\").setup(opts)\n    -- Fix bufferline when restoring a session\n    vim.api.nvim_create_autocmd({ \"BufAdd\", \"BufDelete\" }, {\n      callback = function()\n        vim.schedule(function()\n          pcall(nvim_bufferline)\n        end)\n      end,\n    })\n  end,\n}","recorded":"2024-11-27 17:30:45.554588351","filePath":"null","pinned":false},{"value":"{\n  \"folke/noice.nvim\",\n  event = \"VeryLazy\",\n  opts = {\n    lsp = {\n      override = {\n        [\"vim.lsp.util.convert_input_to_markdown_lines\"] = true,\n        [\"vim.lsp.util.stylize_markdown\"] = true,\n        [\"cmp.entry.get_documentation\"] = true,\n      },\n    },\n    routes = {\n      {\n        filter = {\n          event = \"msg_show\",\n          any = {\n            { find = \"%d+L, %d+B\" },\n            { find = \"; after #%d+\" },\n            { find = \"; before #%d+\" },\n          },\n        },\n        view = \"mini\",\n      },\n    },\n    presets = {\n      bottom_search = true,\n      command_palette = true,\n      long_message_to_split = true,\n    },\n  },\n  -- stylua: ignore\n  keys = {\n    { \"\u003cleader\u003esn\", \"\", desc = \"+noice\"},\n    { \"\u003cS-Enter\u003e\", function() require(\"noice\").redirect(vim.fn.getcmdline()) end, mode = \"c\", desc = \"Redirect Cmdline\" },\n    { \"\u003cleader\u003esnl\", function() require(\"noice\").cmd(\"last\") end, desc = \"Noice Last Message\" },\n    { \"\u003cleader\u003esnh\", function() require(\"noice\").cmd(\"history\") end, desc = \"Noice History\" },\n    { \"\u003cleader\u003esna\", function() require(\"noice\").cmd(\"all\") end, desc = \"Noice All\" },\n    { \"\u003cleader\u003esnd\", function() require(\"noice\").cmd(\"dismiss\") end, desc = \"Dismiss All\" },\n    { \"\u003cleader\u003esnt\", function() require(\"noice\").cmd(\"pick\") end, desc = \"Noice Picker (Telescope/FzfLua)\" },\n    { \"\u003cc-f\u003e\", function() if not require(\"noice.lsp\").scroll(4) then return \"\u003cc-f\u003e\" end end, silent = true, expr = true, desc = \"Scroll Forward\", mode = {\"i\", \"n\", \"s\"} },\n    { \"\u003cc-b\u003e\", function() if not require(\"noice.lsp\").scroll(-4) then return \"\u003cc-b\u003e\" end end, silent = true, expr = true, desc = \"Scroll Backward\", mode = {\"i\", \"n\", \"s\"}},\n  },\n  config = function(_, opts)\n    -- HACK: noice shows messages from before it was enabled,\n    -- but this is not ideal when Lazy is installing plugins,\n    -- so clear the messages in this case.\n    if vim.o.filetype == \"lazy\" then\n      vim.cmd([[messages clear]])\n    end\n    require(\"noice\").setup(opts)\n  end,\n}","recorded":"2024-11-27 17:29:26.541522093","filePath":"null","pinned":false},{"value":"git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm","recorded":"2024-11-27 11:52:08.897269273","filePath":"null","pinned":false},{"value":"https://drive.google.com/drive/folders/10WrA6INMqBm3vO_gYCICGiNW9GBdkLgy?usp=sharing","recorded":"2024-11-26 10:03:33.550871445","filePath":"null","pinned":false},{"value":"Error: LinkageError occurred while loading main class Main\n        java.lang.UnsupportedClassVersionError: Preview features are not enabled for Main (class file ver\nsion 66.65535). Try running with '--enable-preview'","recorded":"2024-11-25 17:47:33.638380193","filePath":"null","pinned":false},{"value":"-- Inline Debug Text\nreturn {\n  -- https://github.com/theHamsta/nvim-dap-virtual-text\n  'theHamsta/nvim-dap-virtual-text',\n  lazy = true,\n  opts = {\n    -- Display debug text as a comment\n    commented = true,\n    -- Customize virtual text\n    display_callback = function(variable, buf, stackframe, node, options)\n      if options.virt_text_pos == 'inline' then\n        return ' = ' .. variable.value\n      else\n        return variable.name .. ' = ' .. variable.value\n      end\n    end,\n  }\n}\n","recorded":"2024-11-25 17:41:19.680186104","filePath":"null","pinned":false},{"value":"[ERROR][2024-11-25 17:29:04] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"java\"\t\"stderr\"\t\"WARNING: Using incubator modules: jdk.incubator.vector\\n\"\n[ERROR][2024-11-25 17:29:04] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"java\"\t\"stderr\"\t\"Nov 25, 2024 5:29:04 PM org.apache.aries.spifly.BaseActivator log\\nINFO: Registered provider ch.qos.logback.classic.servlet.LogbackServletContainerInitializer of service jakarta.servlet.ServletContainerInitializer in bundle ch.qos.logback.classic\\n\"\n[ERROR][2024-11-25 17:29:04] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"java\"\t\"stderr\"\t\"Nov 25, 2024 5:29:04 PM org.apache.aries.spifly.BaseActivator log\\nINFO: Registered provider ch.qos.logback.classic.spi.LogbackServiceProvider of service org.slf4j.spi.SLF4JServiceProvider in bundle ch.qos.logback.classic\\n\"\n[ERROR][2024-11-25 17:29:05] ...lsp/handlers.lua:623\t\"Nov 25, 2024, 5:29:05 PM Failed to load extension bundles \\nLoad bundle list\\norg.eclipse.core.runtime.CoreException: Load bundle list\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.BundleUtils.loadBundles(BundleUtils.java:173)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.InitHandler.handleInitializationOptions(InitHandler.java:113)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.BaseInitHandler.initialize(BaseInitHandler.java:64)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.initialize(JDTLanguageServer.java:283)\\n\\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\\n\\tat org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)\\n\\tat org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.request(GenericEndpoint.java:120)\\n\\tat org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleRequest(RemoteEndpoint.java:272)\\n\\tat org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:201)\\n\\tat org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$1(ParentProcessWatcher.java:144)\\n\\tat org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)\\n\\tat org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)\\n\\tat org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)\\n\\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\\n\\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\\n\\tat java.base/java.lang.Thread.run(Thread.java:1570)\\nContains: Failed to get bundleInfo for bundle from /home/max/.local/share/nvim/mason/share/java-test/com.microsoft.java.test.runner-jar-with-dependencies.jar\\nContains: Failed to get bundleInfo for bundle from /home/max/.local/share/nvim/mason/share/java-test/jacocoagent.jar\\n\"\n[WARN][2024-11-25 17:29:06] ...lsp/handlers.lua:135\t\"The language server jdtls triggers a registerCapability handler for workspace/didChangeWorkspaceFolders despite dynamicRegistration set to false. Report upstream, this warning is harmless\"\n[ERROR][2024-11-25 17:29:07] ...lsp/handlers.lua:623\t\"Nov 25, 2024, 5:29:07 PM Attribute name \\\"crossorigin\\\" associated with an element type \\\"link\\\" must be followed by the ' = ' character.\\nAttribute name \\\"crossorigin\\\" associated with an element type \\\"link\\\" must be followed by the ' = ' character.\\norg.eclipse.core.runtime.CoreException: Attribute name \\\"crossorigin\\\" associated with an element type \\\"link\\\" must be followed by the ' = ' character.\\n\\tat org.eclipse.jdt.ls.core.internal.managers.FormatterManager.readSettingsFromStream(FormatterManager.java:167)\\n\\tat org.eclipse.jdt.ls.core.internal.managers.StandardProjectsManager.configureSettings(StandardProjectsManager.java:337)\\n\\tat org.eclipse.jdt.ls.core.internal.managers.StandardProjectsManager.configureSettings(StandardProjectsManager.java:305)\\n\\tat org.eclipse.jdt.ls.core.internal.managers.StandardProjectsManager$3.preferencesChange(StandardProjectsManager.java:620)\\n\\tat org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager$1.run(PreferenceManager.java:273)\\n\\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)\\n\\tat org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager.preferencesChanged(PreferenceManager.java:276)\\n\\tat org.eclipse.jdt.ls.core.internal.preferences.PreferenceManager.update(PreferenceManager.java:228)\\n\\tat org.eclipse.jdt.ls.core.internal.preferences.StandardPreferenceManager.update(StandardPreferenceManager.java:86)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didChangeConfiguration(JDTLanguageServer.java:550)\\n\\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\\n\\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\\n\\tat org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)\\n\\tat org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)\\n\\tat org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)\\n\\tat org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)\\n\\tat org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$1(ParentProcessWatcher.java:144)\\n\\tat org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)\\n\\tat org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)\\n\\tat org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)\\n\\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)\\n\\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\\n\\tat java.base/java.lang.Thread.run(Thread.java:1570)\\nCaused by: org.xml.sax.SAXParseException; lineNumber: 24; columnNumber: 76; Attribute name \\\"crossorigin\\\" associated with an element type \\\"link\\\" must be followed by the ' = ' character.\\n\\tat java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:204)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:178)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1465)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanAttribute(XMLDocumentFragmentScannerImpl.java:1514)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1372)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2735)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:635)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:551)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:890)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:826)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:134)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1225)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)\\n\\tat java.xml/com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:326)\\n\\tat org.eclipse.jdt.ls.core.internal.managers.FormatterManager.readSettingsFromStream(FormatterManager.java:165)\\n\\t... 24 more\\n\"\n[ERROR][2024-11-25 17:29:07] ...lsp/handlers.lua:623\t\"Nov 25, 2024, 5:29:07 PM Command _java.reloadBundles.command not supported on client\"\n[ERROR][2024-11-25 17:29:07] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"java\"\t\"stderr\"\t\"Nov 25, 2024 5:29:07 PM com.microsoft.java.debug.plugin.internal.JavaDebuggerServerPlugin start\\nINFO: Starting com.microsoft.java.debug.plugin\\n\"\n[ERROR][2024-11-25 17:29:08] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"java\"\t\"stderr\"\t\"Nov 25, 2024 5:29:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation\\nWARNING: Unmatched cancel notification for request id 3\\n\"\n[ERROR][2024-11-25 17:29:09] ...lsp/handlers.lua:623\t\"Nov 25, 2024, 5:29:09 PM Failed to resolve classpath: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\nReferenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\norg.eclipse.core.runtime.CoreException: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\n\\tat org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1870)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1855)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.getClasspathProvider(JavaRuntime.java:1181)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.computeUnresolvedRuntimeClasspath(JavaRuntime.java:1659)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:231)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:211)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:165)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.resolveClasspaths(ResolveClasspathsHandler.java:76)\\n\\tat com.microsoft.java.debug.plugin.internal.JavaDebugDelegateCommandHandler.executeCommand(JavaDebugDelegateCommandHandler.java:62)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:230)\\n\\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:220)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$4(JDTLanguageServer.java:606)\\n\\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:87)\\n\\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)\\n\\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:483)\\n\\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\\n\\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1489)\\n\\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:2071)\\n\\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2033)\\n\\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:187)\\n\"\n[ERROR][2024-11-25 17:29:09] .../vim/lsp/rpc.lua:770\t\"rpc\"\t\"java\"\t\"stderr\"\t\"Nov 25, 2024 5:29:09 PM com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler resolveClasspaths\\nSEVERE: Failed to resolve classpath: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\norg.eclipse.core.runtime.CoreException: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\n\\tat org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1870)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1855)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.getClasspathProvider(JavaRuntime.java:1181)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.computeUnresolvedRuntimeClasspath(JavaRuntime.java:1659)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:231)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:211)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:165)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.resolveClasspaths(ResolveClasspathsHandler.java:76)\\n\\tat com.microsoft.java.debug.plugin.internal.JavaDebugDelegateCommandHandler.executeCommand(JavaDebugDelegateCommandHandler.java:62)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:230)\\n\\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:220)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$4(JDTLanguageServer.java:606)\\n\\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:87)\\n\\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)\\n\\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:483)\\n\\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\\n\\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1489)\\n\\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:2071)\\n\\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2033)\\n\\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:187)\\n\\n\"\n[ERROR][2024-11-25 17:29:09] ...lsp/handlers.lua:623\t'Nov 25, 2024, 5:29:09 PM Problems occurred when invoking code from plug-in: \"org.eclipse.jdt.ls.core\".\\nFailed to resolve classpath: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\njava.lang.Exception: Failed to resolve classpath: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.resolveClasspaths(ResolveClasspathsHandler.java:79)\\n\\tat com.microsoft.java.debug.plugin.internal.JavaDebugDelegateCommandHandler.executeCommand(JavaDebugDelegateCommandHandler.java:62)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:230)\\n\\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:220)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$4(JDTLanguageServer.java:606)\\n\\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:87)\\n\\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)\\n\\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:483)\\n\\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\\n\\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1489)\\n\\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:2071)\\n\\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2033)\\n\\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:187)\\nCaused by: org.eclipse.core.runtime.CoreException: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\n\\tat org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1870)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1855)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.getClasspathProvider(JavaRuntime.java:1181)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.computeUnresolvedRuntimeClasspath(JavaRuntime.java:1659)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:231)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:211)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:165)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.resolveClasspaths(ResolveClasspathsHandler.java:76)\\n\\t... 13 more\\n'\n[ERROR][2024-11-25 17:29:09] ...lsp/handlers.lua:623\t\"Nov 25, 2024, 5:29:09 PM Error in calling delegate command handler\\nFailed to resolve classpath: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\njava.lang.Exception: Failed to resolve classpath: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.resolveClasspaths(ResolveClasspathsHandler.java:79)\\n\\tat com.microsoft.java.debug.plugin.internal.JavaDebugDelegateCommandHandler.executeCommand(JavaDebugDelegateCommandHandler.java:62)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler$1.run(WorkspaceExecuteCommandHandler.java:230)\\n\\tat org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:47)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.WorkspaceExecuteCommandHandler.executeCommand(WorkspaceExecuteCommandHandler.java:220)\\n\\tat org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$4(JDTLanguageServer.java:606)\\n\\tat org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:87)\\n\\tat java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)\\n\\tat java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:483)\\n\\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:507)\\n\\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1489)\\n\\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:2071)\\n\\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:2033)\\n\\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:187)\\nCaused by: org.eclipse.core.runtime.CoreException: Referenced classpath provider does not exist: org.eclipse.buildship.core.classpathprovider\\n\\tat org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1870)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.abort(JavaRuntime.java:1855)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.getClasspathProvider(JavaRuntime.java:1181)\\n\\tat org.eclipse.jdt.launching.JavaRuntime.computeUnresolvedRuntimeClasspath(JavaRuntime.java:1659)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:231)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:211)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.computeClassPath(ResolveClasspathsHandler.java:165)\\n\\tat com.microsoft.java.debug.plugin.internal.ResolveClasspathsHandler.resolveClasspaths(ResolveClasspathsHandler.java:76)\\n\\t... 13 more\\n\"\n","recorded":"2024-11-25 17:31:25.368679863","filePath":"null","pinned":false},{"value":"https://github.com/mzmine/mzmine/blob/master/mzmine-intellij-code-formater.xml","recorded":"2024-11-25 17:28:34.088695299","filePath":"null","pinned":false},{"value":"keymap.set(\"n\", \"\u003cleader\u003ebb\", \"\u003ccmd\u003elua require'dap'.toggle_breakpoint()\u003ccr\u003e\")\nkeymap.set(\"n\", \"\u003cleader\u003ebc\", \"\u003ccmd\u003elua require'dap'.set_breakpoint(vim.fn.input('Breakpoint condition: '))\u003ccr\u003e\")\nkeymap.set(\"n\", \"\u003cleader\u003ebl\", \"\u003ccmd\u003elua require'dap'.set_breakpoint(nil, nil, vim.fn.input('Log point message: '))\u003ccr\u003e\")\nkeymap.set(\"n\", '\u003cleader\u003ebr', \"\u003ccmd\u003elua require'dap'.clear_breakpoints()\u003ccr\u003e\")\nkeymap.set(\"n\", '\u003cleader\u003eba', '\u003ccmd\u003eTelescope dap list_breakpoints\u003ccr\u003e')\nkeymap.set(\"n\", \"\u003cleader\u003edc\", \"\u003ccmd\u003elua require'dap'.continue()\u003ccr\u003e\")\nkeymap.set(\"n\", \"\u003cleader\u003edj\", \"\u003ccmd\u003elua require'dap'.step_over()\u003ccr\u003e\")\nkeymap.set(\"n\", \"\u003cleader\u003edk\", \"\u003ccmd\u003elua require'dap'.step_into()\u003ccr\u003e\")\nkeymap.set(\"n\", \"\u003cleader\u003edo\", \"\u003ccmd\u003elua require'dap'.step_out()\u003ccr\u003e\")\nkeymap.set(\"n\", '\u003cleader\u003edd', function() require('dap').disconnect(); require('dapui').close(); end)\nkeymap.set(\"n\", '\u003cleader\u003edt', function() require('dap').terminate(); require('dapui').close(); end)\nkeymap.set(\"n\", \"\u003cleader\u003edr\", \"\u003ccmd\u003elua require'dap'.repl.toggle()\u003ccr\u003e\")\nkeymap.set(\"n\", \"\u003cleader\u003edl\", \"\u003ccmd\u003elua require'dap'.run_last()\u003ccr\u003e\")\nkeymap.set(\"n\", '\u003cleader\u003edi', function() require \"dap.ui.widgets\".hover() end)\nkeymap.set(\"n\", '\u003cleader\u003ed?', function() local widgets = require \"dap.ui.widgets\"; widgets.centered_float(widgets.scopes) end)\nkeymap.set(\"n\", '\u003cleader\u003edf', '\u003ccmd\u003eTelescope dap frames\u003ccr\u003e')\nkeymap.set(\"n\", '\u003cleader\u003edh', '\u003ccmd\u003eTelescope dap commands\u003ccr\u003e')\nkeymap.set(\"n\", '\u003cleader\u003ede', function() require('telescope.builtin').diagnostics({default_text=\":E:\"}) end)","recorded":"2024-11-25 17:18:34.186523149","filePath":"null","pinned":false},{"value":"keymap.set(\"n\", \"\u003cleader\u003edc\", \"\u003ccmd\u003elua require'dap'.continue()\u003ccr\u003e\")","recorded":"2024-11-25 17:13:46.048953913","filePath":"null","pinned":false},{"value":"-- Debugging\nkeymap.set(\"n\", \"\u003cleader\u003ebb\", \"\u003ccmd\u003elua require'dap'.toggle_breakpoint()\u003ccr\u003e\")","recorded":"2024-11-25 17:11:39.254431789","filePath":"null","pinned":false},{"value":"-- Debugging Support\nreturn {\n  -- https://github.com/rcarriga/nvim-dap-ui\n  'rcarriga/nvim-dap-ui',\n  event = 'VeryLazy',\n  dependencies = {\n    -- https://github.com/mfussenegger/nvim-dap\n    'mfussenegger/nvim-dap',\n    -- https://github.com/nvim-neotest/nvim-nio\n    'nvim-neotest/nvim-nio',\n    -- https://github.com/theHamsta/nvim-dap-virtual-text\n    'theHamsta/nvim-dap-virtual-text', -- inline variable text while debugging\n    -- https://github.com/nvim-telescope/telescope-dap.nvim\n    'nvim-telescope/telescope-dap.nvim', -- telescope integration with dap\n  },\n  opts = {\n    controls = {\n      element = \"repl\",\n      enabled = false,\n      icons = {\n        disconnect = \"\",\n        pause = \"\",\n        play = \"\",\n        run_last = \"\",\n        step_back = \"\",\n        step_into = \"\",\n        step_out = \"\",\n        step_over = \"\",\n        terminate = \"\"\n      }\n    },\n    element_mappings = {},\n    expand_lines = true,\n    floating = {\n      border = \"single\",\n      mappings = {\n        close = { \"q\", \"\u003cEsc\u003e\" }\n      }\n    },\n    force_buffers = true,\n    icons = {\n      collapsed = \"\",\n      current_frame = \"\",\n      expanded = \"\"\n    },\n    layouts = {\n      {\n        elements = {\n          {\n            id = \"scopes\",\n            size = 0.50\n          },\n          {\n            id = \"stacks\",\n            size = 0.30\n          },\n          {\n            id = \"watches\",\n            size = 0.10\n          },\n          {\n            id = \"breakpoints\",\n            size = 0.10\n          }\n        },\n        size = 40,\n        position = \"left\", -- Can be \"left\" or \"right\"\n      },\n      {\n        elements = {\n          \"repl\",\n          \"console\",\n        },\n        size = 10,\n        position = \"bottom\", -- Can be \"bottom\" or \"top\"\n      }\n    },\n    mappings = {\n      edit = \"e\",\n      expand = { \"\u003cCR\u003e\", \"\u003c2-LeftMouse\u003e\" },\n      open = \"o\",\n      remove = \"d\",\n      repl = \"r\",\n      toggle = \"t\"\n    },\n    render = {\n      indent = 1,\n      max_value_lines = 100\n    }\n  },\n  config = function (_, opts)\n    local dap = require('dap')\n    require('dapui').setup(opts)\n\n    dap.listeners.after.event_initialized[\"dapui_config\"] = function()\n      require('dapui').open()\n    end\n\n    dap.listeners.before.event_terminated[\"dapui_config\"] = function()\n      -- Commented to prevent DAP UI from closing when unit tests finish\n      -- require('dapui').close()\n    end\n\n    dap.listeners.before.event_exited[\"dapui_config\"] = function()\n      -- Commented to prevent DAP UI from closing when unit tests finish\n      -- require('dapui').close()\n    end\n\n    -- Add dap configurations based on your language/adapter settings\n    -- https://github.com/mfussenegger/nvim-dap/wiki/Debug-Adapter-installation\n    dap.configurations.java = {\n      {\n        name = \"Debug Launch (2GB)\";\n        type = 'java';\n        request = 'launch';\n        vmArgs = \"\" ..\n          \"-Xmx2g \"\n      },\n      {\n        name = \"Debug Attach (8000)\";\n        type = 'java';\n        request = 'attach';\n        hostName = \"127.0.0.1\";\n        port = 8000;\n      },\n      {\n        name = \"Debug Attach (5005)\";\n        type = 'java';\n        request = 'attach';\n        hostName = \"127.0.0.1\";\n        port = 5005;\n      },\n      {\n        name = \"My Custom Java Run Configuration\",\n        type = \"java\",\n        request = \"launch\",\n        -- You need to extend the classPath to list your dependencies.\n        -- `nvim-jdtls` would automatically add the `classPaths` property if it is missing\n        -- classPaths = {},\n\n        -- If using multi-module projects, remove otherwise.\n        -- projectName = \"yourProjectName\",\n\n        -- javaExec = \"java\",\n        mainClass = \"replace.with.your.fully.qualified.MainClass\",\n\n        -- If using the JDK9+ module system, this needs to be extended\n        -- `nvim-jdtls` would automatically populate this property\n        -- modulePaths = {},\n        vmArgs = \"\" ..\n          \"-Xmx2g \"\n      },\n    }\n  end\n}\n","recorded":"2024-11-25 17:08:49.704056935","filePath":"null","pinned":false},{"value":"-- Needed for debugging\nconfig[\"on_attach\"] = function(client, bufnr)\n  jdtls.setup_dap({ hotcodereplace = \"auto\" })\n  require(\"jdtls.dap\").setup_dap_main_class_configs()\nend","recorded":"2024-11-25 17:07:42.656577336","filePath":"null","pinned":false},{"value":"/home/max/Programming/mzmine/mzmine-intellij-code-formater.xml","recorded":"2024-11-25 17:00:33.950086749","filePath":"null","pinned":false},{"value":"-- JDTLS (Java LSP) configuration\nlocal home = vim.env.HOME -- Get the home directory\n\nlocal jdtls = require(\"jdtls\")\nlocal project_name = vim.fn.fnamemodify(vim.fn.getcwd(), \":p:h:t\")\nlocal workspace_dir = home .. \"/jdtls-workspace/\" .. project_name\n\nlocal system_os = \"\"\n\n-- Determine OS\nif vim.fn.has(\"mac\") == 1 then\n\tsystem_os = \"mac\"\nelseif vim.fn.has(\"unix\") == 1 then\n\tsystem_os = \"linux\"\nelseif vim.fn.has(\"win32\") == 1 or vim.fn.has(\"win64\") == 1 then\n\tsystem_os = \"win\"\nelse\n\tprint(\"OS not found, defaulting to 'linux'\")\n\tsystem_os = \"linux\"\nend\n\n-- Needed for debugging\nlocal bundles = {\n\tvim.fn.glob(home .. \"/.local/share/nvim/mason/share/java-debug-adapter/com.microsoft.java.debug.plugin.jar\"),\n}\n\n-- Needed for running/debugging unit tests\nvim.list_extend(bundles, vim.split(vim.fn.glob(home .. \"/.local/share/nvim/mason/share/java-test/*.jar\", 1), \"\\n\"))\n\n-- See `:help vim.lsp.start_client` for an overview of the supported `config` options.\nlocal config = {\n\t-- The command that starts the language server\n\t-- See: https://github.com/eclipse/eclipse.jdt.ls#running-from-the-command-line\n\tcmd = {\n\t\t\"java\",\n\t\t\"-Declipse.application=org.eclipse.jdt.ls.core.id1\",\n\t\t\"-Dosgi.bundles.defaultStartLevel=4\",\n\t\t\"-Declipse.product=org.eclipse.jdt.ls.core.product\",\n\t\t\"-Dlog.protocol=true\",\n\t\t\"-Dlog.level=ALL\",\n\t\t\"-javaagent:\" .. home .. \"/.local/share/nvim/mason/share/jdtls/lombok.jar\",\n\t\t\"-Xmx4g\",\n\t\t\"--add-modules=ALL-SYSTEM\",\n\t\t\"--add-opens\",\n\t\t\"java.base/java.util=ALL-UNNAMED\",\n\t\t\"--add-opens\",\n\t\t\"java.base/java.lang=ALL-UNNAMED\",\n\n\t\t-- Eclipse jdtls location\n\t\t\"-jar\",\n\t\thome .. \"/.local/share/nvim/mason/share/jdtls/plugins/org.eclipse.equinox.launcher.jar\",\n\t\t\"-configuration\",\n\t\thome .. \"/.local/share/nvim/mason/packages/jdtls/config_\" .. system_os,\n\t\t\"-data\",\n\t\tworkspace_dir,\n\t},\n\n\t-- This is the default if not provided, you can remove it. Or adjust as needed.\n\t-- One dedicated LSP server \u0026 client will be started per unique root_dir\n\troot_dir = require(\"jdtls.setup\").find_root({ \".git\", \"mvnw\", \"pom.xml\", \"build.gradle\" }),\n\n\t-- Here you can configure eclipse.jdt.ls specific settings\n\t-- See https://github.com/eclipse/eclipse.jdt.ls/wiki/Running-the-JAVA-LS-server-from-the-command-line#initialize-request\n\tsettings = {\n\t\tjava = {\n\t\t\t-- TODO Replace this with the absolute path to your main java version (JDK 17 or higher)\n\t\t\thome = \"/usr/lib/jvm/java-22\",\n\t\t\teclipse = {\n\t\t\t\tdownloadSources = true,\n\t\t\t},\n\t\t\tconfiguration = {\n\t\t\t\tupdateBuildConfiguration = \"interactive\",\n\t\t\t\t-- TODO Update this by adding any runtimes that you need to support your Java projects and removing any that you don't have installed\n\t\t\t\t-- The runtime name parameters need to match specific Java execution environments.  See https://github.com/tamago324/nlsp-settings.nvim/blob/2a52e793d4f293c0e1d61ee5794e3ff62bfbbb5d/schemas/_generated/jdtls.json#L317-L334\n\t\t\t\truntimes = {\n\t\t\t\t\t{\n\t\t\t\t\t\tname = \"JavaSE-11\",\n\t\t\t\t\t\tpath = \"/usr/lib/jvm/java-23-openjdk\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname = \"JavaSE-17\",\n\t\t\t\t\t\tpath = \"/usr/lib/jvm/java-21-openjdk\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmaven = {\n\t\t\t\tdownloadSources = true,\n\t\t\t},\n\t\t\timplementationsCodeLens = {\n\t\t\t\tenabled = true,\n\t\t\t},\n\t\t\treferencesCodeLens = {\n\t\t\t\tenabled = true,\n\t\t\t},\n\t\t\treferences = {\n\t\t\t\tincludeDecompiledSources = true,\n\t\t\t},\n\t\t\tsignatureHelp = { enabled = true },\n\t\t\tformat = {\n\t\t\t\tenabled = true,\n\t\t\t\t-- Formatting works by default, but you can refer to a specific file/URL if you choose\n\t\t\t\tsettings = {\n                    url = home .. \"/.dotfiles/.config/nvim/ftplugin/mzmine-eclipse-code-formater.xml\",\n                    profile = \"mzmine-GoogleStyle\",\n\t\t\t\t  -- url = \"https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml\",\n\t\t\t\t  -- profile = \"GoogleStyle\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tcompletion = {\n\t\t\tfavoriteStaticMembers = {\n\t\t\t\t\"org.hamcrest.MatcherAssert.assertThat\",\n\t\t\t\t\"org.hamcrest.Matchers.*\",\n\t\t\t\t\"org.hamcrest.CoreMatchers.*\",\n\t\t\t\t\"org.junit.jupiter.api.Assertions.*\",\n\t\t\t\t\"java.util.Objects.requireNonNull\",\n\t\t\t\t\"java.util.Objects.requireNonNullElse\",\n\t\t\t\t\"org.mockito.Mockito.*\",\n\t\t\t},\n\t\t\timportOrder = {\n\t\t\t\t\"java\",\n\t\t\t\t\"javax\",\n\t\t\t\t\"com\",\n\t\t\t\t\"org\",\n\t\t\t},\n\t\t},\n\t\textendedClientCapabilities = jdtls.extendedClientCapabilities,\n\t\tsources = {\n\t\t\torganizeImports = {\n\t\t\t\tstarThreshold = 9999,\n\t\t\t\tstaticStarThreshold = 9999,\n\t\t\t},\n\t\t},\n\t\tcodeGeneration = {\n\t\t\ttoString = {\n\t\t\t\ttemplate = \"${object.className}{${member.name()}=${member.value}, ${otherMembers}}\",\n\t\t\t},\n\t\t\tuseBlocks = true,\n\t\t},\n\t},\n\t-- Needed for auto-completion with method signatures and placeholders\n\tcapabilities = require(\"cmp_nvim_lsp\").default_capabilities(),\n\tflags = {\n\t\tallow_incremental_sync = true,\n\t},\n\tinit_options = {\n\t\t-- References the bundles defined above to support Debugging and Unit Testing\n\t\tbundles = bundles,\n\t},\n}\n\n-- Needed for debugging\n-- config[\"on_attach\"] = function(client, bufnr)\n-- \tjdtls.setup_dap({ hotcodereplace = \"auto\" })\n-- \trequire(\"jdtls.dap\").setup_dap_main_class_configs()\n-- end\n\n-- This starts a new client \u0026 server, or attaches to an existing client \u0026 server based on the `root_dir`.\njdtls.start_or_attach(config)\n","recorded":"2024-11-25 16:40:03.202270482","filePath":"null","pinned":false},{"value":"/home/max/Programming/mzmine/mzmine-eclipse-code-formater.xml","recorded":"2024-11-23 10:11:05.564999672","filePath":"null","pinned":false},{"value":"bootdev run ea036a3f-6fa3-446a-ba20-c04cb913e12a","recorded":"2024-11-21 17:07:30.204276815","filePath":"null","pinned":false},{"value":"create table users(\nid uuid primary,\ncreated_at timestamp not null,\nupdated_at timestamp not null,\nemail text not null\n);\n","recorded":"2024-11-21 17:05:58.097528646","filePath":"null","pinned":false},{"value":"go install github.com/pressly/goose/v3/cmd/goose@latest","recorded":"2024-11-21 16:56:00.311131112","filePath":"null","pinned":false},{"value":"bootdev run c3e215a5-1d8f-437b-9f89-3606118800ec","recorded":"2024-11-21 16:54:37.212074566","filePath":"null","pinned":false},{"value":"sudo -u postgres initdb -D /var/lib/postgres/data","recorded":"2024-11-21 16:47:58.448134745","filePath":"null","pinned":false},{"value":"bootdev run 7cde3fa8-f38a-444e-92a6-83166a905cb0","recorded":"2024-11-21 16:15:05.678568851","filePath":"null","pinned":false},{"value":"E5108: Error executing lua [string \":lua\"]:1: attempt to call field 'format' (a nil value)\nstack traceback:\n        [string \":lua\"]:1: in main chunk","recorded":"2024-11-19 09:07:16.551243505","filePath":"null","pinned":false},{"value":"settings = {\n    java = {\n        format = {\n            enabled = true,\n            settings = {\n                -- Direct path to the XML file\n                url = vim.fn.expand('~/.config/nvim/ftplugin/your-format.xml'),\n                -- Or absolute path:\n                -- url = \"/absolute/path/to/your/format.xml\",\n                \n                -- The profile name from your XML file\n                profile = \"YourProfileName\"\n            }\n        }\n    }\n}","recorded":"2024-11-18 20:55:01.465429238","filePath":"null","pinned":false},{"value":"-- JDTLS (Java LSP) configuration\nlocal home = vim.env.HOME -- Get the home directory\n\nlocal jdtls = require(\"jdtls\")\nlocal project_name = vim.fn.fnamemodify(vim.fn.getcwd(), \":p:h:t\")\nlocal workspace_dir = home .. \"/jdtls-workspace/\" .. project_name\n\nlocal system_os = \"\"\n\n-- Determine OS\nif vim.fn.has(\"mac\") == 1 then\n\tsystem_os = \"mac\"\nelseif vim.fn.has(\"unix\") == 1 then\n\tsystem_os = \"linux\"\nelseif vim.fn.has(\"win32\") == 1 or vim.fn.has(\"win64\") == 1 then\n\tsystem_os = \"win\"\nelse\n\tprint(\"OS not found, defaulting to 'linux'\")\n\tsystem_os = \"linux\"\nend\n\n-- Needed for debugging\nlocal bundles = {\n\tvim.fn.glob(home .. \"/.local/share/nvim/mason/share/java-debug-adapter/com.microsoft.java.debug.plugin.jar\"),\n}\n\n-- Needed for running/debugging unit tests\nvim.list_extend(bundles, vim.split(vim.fn.glob(home .. \"/.local/share/nvim/mason/share/java-test/*.jar\", 1), \"\\n\"))\n\n-- See `:help vim.lsp.start_client` for an overview of the supported `config` options.\nlocal config = {\n\t-- The command that starts the language server\n\t-- See: https://github.com/eclipse/eclipse.jdt.ls#running-from-the-command-line\n\tcmd = {\n\t\t\"java\",\n\t\t\"-Declipse.application=org.eclipse.jdt.ls.core.id1\",\n\t\t\"-Dosgi.bundles.defaultStartLevel=4\",\n\t\t\"-Declipse.product=org.eclipse.jdt.ls.core.product\",\n\t\t\"-Dlog.protocol=true\",\n\t\t\"-Dlog.level=ALL\",\n\t\t\"-javaagent:\" .. home .. \"/.local/share/nvim/mason/share/jdtls/lombok.jar\",\n\t\t\"-Xmx4g\",\n\t\t\"--add-modules=ALL-SYSTEM\",\n\t\t\"--add-opens\",\n\t\t\"java.base/java.util=ALL-UNNAMED\",\n\t\t\"--add-opens\",\n\t\t\"java.base/java.lang=ALL-UNNAMED\",\n\n\t\t-- Eclipse jdtls location\n\t\t\"-jar\",\n\t\thome .. \"/.local/share/nvim/mason/share/jdtls/plugins/org.eclipse.equinox.launcher.jar\",\n\t\t\"-configuration\",\n\t\thome .. \"/.local/share/nvim/mason/packages/jdtls/config_\" .. system_os,\n\t\t\"-data\",\n\t\tworkspace_dir,\n\t},\n\n\t-- This is the default if not provided, you can remove it. Or adjust as needed.\n\t-- One dedicated LSP server \u0026 client will be started per unique root_dir\n\troot_dir = require(\"jdtls.setup\").find_root({ \".git\", \"mvnw\", \"pom.xml\", \"build.gradle\" }),\n\n\t-- Here you can configure eclipse.jdt.ls specific settings\n\t-- See https://github.com/eclipse/eclipse.jdt.ls/wiki/Running-the-JAVA-LS-server-from-the-command-line#initialize-request\n\tsettings = {\n\t\tjava = {\n\t\t\t-- TODO Replace this with the absolute path to your main java version (JDK 17 or higher)\n\t\t\thome = \"/usr/lib/jvm/java-22\",\n\t\t\teclipse = {\n\t\t\t\tdownloadSources = true,\n\t\t\t},\n\t\t\tconfiguration = {\n\t\t\t\tupdateBuildConfiguration = \"interactive\",\n\t\t\t\t-- TODO Update this by adding any runtimes that you need to support your Java projects and removing any that you don't have installed\n\t\t\t\t-- The runtime name parameters need to match specific Java execution environments.  See https://github.com/tamago324/nlsp-settings.nvim/blob/2a52e793d4f293c0e1d61ee5794e3ff62bfbbb5d/schemas/_generated/jdtls.json#L317-L334\n\t\t\t\truntimes = {\n\t\t\t\t\t{\n\t\t\t\t\t\tname = \"JavaSE-11\",\n\t\t\t\t\t\tpath = \"/usr/lib/jvm/java-23-openjdk\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname = \"JavaSE-17\",\n\t\t\t\t\t\tpath = \"/usr/lib/jvm/java-21-openjdk\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tmaven = {\n\t\t\t\tdownloadSources = true,\n\t\t\t},\n\t\t\timplementationsCodeLens = {\n\t\t\t\tenabled = true,\n\t\t\t},\n\t\t\treferencesCodeLens = {\n\t\t\t\tenabled = true,\n\t\t\t},\n\t\t\treferences = {\n\t\t\t\tincludeDecompiledSources = true,\n\t\t\t},\n\t\t\tsignatureHelp = { enabled = true },\n\t\t\tformat = {\n\t\t\t\tenabled = true,\n\t\t\t\t-- Formatting works by default, but you can refer to a specific file/URL if you choose\n\t\t\t\tsettings = {\n                    path = home .. \"/.config/nvim/ftplugin/mzmine-intellij-code-formater.xml\",\n                    profile = \"mzmine-GoogleStyle\",\n\t\t\t\t  -- url = \"https://github.com/google/styleguide/blob/gh-pages/intellij-java-google-style.xml\",\n\t\t\t\t  -- profile = \"GoogleStyle\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tcompletion = {\n\t\t\tfavoriteStaticMembers = {\n\t\t\t\t\"org.hamcrest.MatcherAssert.assertThat\",\n\t\t\t\t\"org.hamcrest.Matchers.*\",\n\t\t\t\t\"org.hamcrest.CoreMatchers.*\",\n\t\t\t\t\"org.junit.jupiter.api.Assertions.*\",\n\t\t\t\t\"java.util.Objects.requireNonNull\",\n\t\t\t\t\"java.util.Objects.requireNonNullElse\",\n\t\t\t\t\"org.mockito.Mockito.*\",\n\t\t\t},\n\t\t\timportOrder = {\n\t\t\t\t\"java\",\n\t\t\t\t\"javax\",\n\t\t\t\t\"com\",\n\t\t\t\t\"org\",\n\t\t\t},\n\t\t},\n\t\textendedClientCapabilities = jdtls.extendedClientCapabilities,\n\t\tsources = {\n\t\t\torganizeImports = {\n\t\t\t\tstarThreshold = 9999,\n\t\t\t\tstaticStarThreshold = 9999,\n\t\t\t},\n\t\t},\n\t\tcodeGeneration = {\n\t\t\ttoString = {\n\t\t\t\ttemplate = \"${object.className}{${member.name()}=${member.value}, ${otherMembers}}\",\n\t\t\t},\n\t\t\tuseBlocks = true,\n\t\t},\n\t},\n\t-- Needed for auto-completion with method signatures and placeholders\n\tcapabilities = require(\"cmp_nvim_lsp\").default_capabilities(),\n\tflags = {\n\t\tallow_incremental_sync = true,\n\t},\n\tinit_options = {\n\t\t-- References the bundles defined above to support Debugging and Unit Testing\n\t\tbundles = bundles,\n\t},\n}\n\n-- Needed for debugging\n-- config[\"on_attach\"] = function(client, bufnr)\n-- \tjdtls.setup_dap({ hotcodereplace = \"auto\" })\n-- \trequire(\"jdtls.dap\").setup_dap_main_class_configs()\n-- end\n\n-- This starts a new client \u0026 server, or attaches to an existing client \u0026 server based on the `root_dir`.\njdtls.start_or_attach(config)\n","recorded":"2024-11-18 20:38:15.837402938","filePath":"null","pinned":false},{"value":":lua print(vim.inspect(require('jdtls.setup').find_root({'.git', 'mvnw', 'gradlew'})))","recorded":"2024-11-18 20:36:29.284558193","filePath":"null","pinned":false},{"value":"git@github.com:MaximilianToe/piController.git","recorded":"2024-11-18 14:02:41.705090224","filePath":"null","pinned":false},{"value":"bootdev run 374ef0f7-1d2d-40b8-8cef-14e9ffd033ab","recorded":"2024-11-18 13:52:02.998108817","filePath":"null","pinned":false},{"value":"raise Exception(\"sorry, key not found\")","recorded":"2024-11-18 13:07:31.44167031","filePath":"null","pinned":false},{"value":"7fc5772c727a5b1414176430f42f207996ffac83","recorded":"2024-11-18 10:49:30.47056516","filePath":"null","pinned":false},{"value":"https://www.reddit.com/r/linuxmemes/comments/1fxiexv/after_2_weeks_vs_2_years_of_installing_random/?utm_source=share\u0026utm_medium=web3x\u0026utm_name=web3xcss\u0026utm_term=1\u0026utm_content=share_button","recorded":"2024-11-17 13:31:47.320307941","filePath":"null","pinned":false},{"value":"# Basic CORS configuration\nspring.mvc.cors.mapping=/**\nspring.mvc.cors.allowed-origins=http://localhost:3000\nspring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH\nspring.mvc.cors.allowed-headers=*\nspring.mvc.cors.allow-credentials=true\nspring.mvc.cors.max-age=3600\n\n# If you need multiple origins, separate them with commas\nspring.mvc.cors.allowed-origins=http://localhost:3000,https://yourdomain.com\n\n# If you want to specify exact headers instead of using *\nspring.mvc.cors.allowed-headers=Authorization,Content-Type,X-Requested-With\n\n# If you want to expose specific headers to the client\nspring.mvc.cors.exposed-headers=X-Custom-Header","recorded":"2024-11-17 12:54:56.827436447","filePath":"null","pinned":false},{"value":"spring:\n  mvc:\n    cors:\n      mapping: \"/api/**\"\n      allowed-origins: \"http://localhost:3000\"\n      allowed-methods: \"GET,POST,PUT,DELETE\"\n      allowed-headers: \"*\"\n      allow-credentials: true","recorded":"2024-11-17 12:53:37.654686565","filePath":"null","pinned":false},{"value":"    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n            .allowedOrigins(\"http://localhost:3000\")\n            .allowedMethods(\"*\")\n            .allowedHeaders(\"*\")\n            .allowCredentials(true);\n    }","recorded":"2024-11-17 12:52:26.953864296","filePath":"null","pinned":false},{"value":"\u0026{%!s(*io.LimitedReader=\u0026{0xc000030120 11}) \u003cnil\u003e %!s(*bufio.Reader=\u003cnil\u003e) %!s(bool=false) %!s(bool=true) {%!s(int32=0) %!s(u\n                                                                                                                              │int32=0)} %!s(bool=false) %!s(bool=false) %!s(bool=false) %!s(func()=0x659ca0)}\n                                                                                                                              │2024/11/17 10:58:46 Error decoding parameters: invalid character 'e' in literal true (expecting 'r')","recorded":"2024-11-17 11:02:42.289165566","filePath":"null","pinned":false},{"value":"[Desktop Entry]\nType=Application\nName=Postman\nIcon=/opt/Postman/app/resources/app/assets/icon.png\nExec=\"/opt/Postman/Postman\"\nComment=Postman API Tool\nCategories=Development;","recorded":"2024-11-17 10:33:00.269929312","filePath":"null","pinned":false},{"value":"bootdev run 892b38f7-d154-4591-ac63-a9fbc2a38187","recorded":"2024-11-17 09:53:20.677301011","filePath":"null","pinned":false},{"value":"\u003chtml\u003e\n  \u003cbody\u003e\n    \u003ch1\u003eWelcome, Chirpy Admin\u003c/h1\u003e\n    \u003cp\u003eChirpy has been visited %d times!\u003c/p\u003e\n  \u003c/body\u003e\n\u003c/html\u003e","recorded":"2024-11-17 09:48:59.251780308","filePath":"null","pinned":false},{"value":"bootdev run 0b877128-7dd0-4643-8fef-5d8faf9a1cc6","recorded":"2024-11-17 09:45:14.778545465","filePath":"null","pinned":false},{"value":"vim.keymap.set('n', '\u003cLeader\u003ee', vim.diagnostic.open_float, { noremap = true, silent = true })\n","recorded":"2024-11-16 21:27:41.931983383","filePath":"null","pinned":false},{"value":"bootdev run d1c4962d-f55e-4f0f-ac9c-913db8ef8ae8","recorded":"2024-11-16 21:13:48.521546794","filePath":"null","pinned":false},{"value":"func (cfg *apiConfig) middlewareMetricsInc(next http.Handler) http.Handler{\n    s := struct{ServeHTTP func(http.ResponseWriter, *http.Request)}{}\n    s.ServeHTTP = func(w http.ResponseWriter, request *http.Request){\n        cfg.fileserverHits.Add(1)\n        next.ServeHTTP(w,request)\n    }\n    return s\n}\n","recorded":"2024-11-16 20:55:30.609160563","filePath":"null","pinned":false},{"value":"bootdev run a13ffa72-18b9-49f7-81a9-c5a17d007b3a","recorded":"2024-11-16 20:17:01.149757641","filePath":"null","pinned":false},{"value":"bootdev run 174d13f0-f887-46c6-a633-d963662fde39","recorded":"2024-11-16 17:22:15.621282135","filePath":"null","pinned":false},{"value":" ","recorded":"2024-11-16 17:22:04.544340528","filePath":"null","pinned":false},{"value":"bootdev run 20709716-4d7c-47fe-b182-9bccf8436ddc","recorded":"2024-11-16 16:50:12.40957054","filePath":"null","pinned":false},{"value":"bootdev run 8cf7315a-ffc0-4ce0-b482-5972ab695131 -s","recorded":"2024-11-16 11:47:22.720338905","filePath":"null","pinned":false},{"value":"bootdev run 8cf7315a-ffc0-4ce0-b482-5972ab695131","recorded":"2024-11-16 11:47:21.8196786","filePath":"null","pinned":false},{"value":"\u003chtml\u003e\n\n\u003cbody\u003e\n    \u003ch1\u003eWelcome to Chirpy\u003c/h1\u003e\n\u003c/body\u003e\n\n\u003c/html\u003e","recorded":"2024-11-16 11:44:17.327155023","filePath":"null","pinned":false},{"value":"go install github.com/bootdotdev/bootdev@latest","recorded":"2024-11-16 11:42:07.45451891","filePath":"null","pinned":false},{"value":"curl -sS https://webi.sh/golang | sh","recorded":"2024-11-16 11:41:35.834175651","filePath":"null","pinned":false},{"value":"bootdev run 861ada77-c583-42c8-a265-657f2c453103","recorded":"2024-11-16 11:41:14.190529158","filePath":"null","pinned":false},{"value":"git@github.com:MaximilianToe/Chirpy.git","recorded":"2024-11-16 11:20:51.23967558","filePath":"null","pinned":false},{"value":"\nMarcello Politi","recorded":"2024-11-15 15:32:15.287682015","filePath":"null","pinned":false},{"value":"Hi Admissions Team,\n\nThank you so much for the opportunity and for letting me know I’ve made it to the next round – I’m honored to be among the 30%!\n\nUnfortunately, I won’t be able to move forward with the process or attend the session starting in December due to scheduling conflicts. I really appreciate the chance and wish you all the best with this cohort.\n\nThanks again, and I hope our paths cross in the future!\n\nBest regards,\nTönies Maximilian","recorded":"2024-11-15 15:30:44.530140928","filePath":"null","pinned":false},{"value":"Hi Tönies Maximilian , \n\nCongratulations! We have reviewed your application and you have successfully made it to the next round of the selection process for the next session of the School of AI, starting in early December. Only 30% of applicants make it this far, so this is already quite an accomplishment!\n\nIn order to move on, we kindly ask you to complete the following tests in a week’s time:\n\n    One-way questionnaire\n\n    Coding Test\n\n \n\nWe wish you good luck with your application. We hope to see you on the other side :)\n\nThe Admissions Team","recorded":"2024-11-15 15:27:20.505783139","filePath":"null","pinned":false},{"value":"@Configuration\npublic class SecurityConfig {\n\n    @Bean\n    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {\n        http\n            .authorizeRequests()\n            .antMatchers(\"/\", \"/home\").permitAll()\n            .anyRequest().authenticated()\n            .and()\n            .formLogin()\n            .loginPage(\"/login\")\n            .permitAll()\n            .and()\n            .logout()\n            .permitAll();\n\n        return http.build();\n    }\n\n    @Bean\n    public UserDetailsService userDetailsService() {\n        UserDetails user =\n             User.withDefaultPasswordEncoder()\n                .username(\"user\")\n                .password(\"password\")\n                .roles(\"USER\")\n                .build();\n\n        return new InMemoryUserDetailsManager(user);\n    }\n}","recorded":"2024-11-15 14:44:00.282415131","filePath":"null","pinned":false},{"value":"git reset --hard a7ed703","recorded":"2024-11-14 14:31:33.502967452","filePath":"null","pinned":false},{"value":"a7ed703925a41c1204dd861ef209e7fb0f69cd4c","recorded":"2024-11-14 14:26:02.317344488","filePath":"null","pinned":false},{"value":"error: commit a7ed703925a41c1204dd861ef209e7fb0f69cd4c is a merge but no -m option was given.\nfatal: revert failed","recorded":"2024-11-14 14:25:29.834987591","filePath":"null","pinned":false},{"value":"f","recorded":"2024-11-14 14:23:07.164702251","filePath":"null","pinned":false},{"value":"f\"Processing doc: '{doc}'. File Type: {file_type}\"","recorded":"2024-11-14 09:07:39.854749305","filePath":"null","pinned":false},{"value":"def new_collection(initial_docs):\n    new_docs = initial_docs.copy()\n    def inner_function(s):\n        return new_docs.append(s) \n    return inner_function\n","recorded":"2024-11-14 08:48:50.089191013","filePath":"null","pinned":false},{"value":"NAO® RL","recorded":"2024-11-13 22:19:50.936940249","filePath":"null","pinned":false},{"value":"Petzl - IKO CORE ","recorded":"2024-11-13 22:15:41.360489016","filePath":"null","pinned":false},{"value":"\nwelcome2410_1rxdig","recorded":"2024-11-13 22:07:14.339075255","filePath":"null","pinned":false},{"value":"jan10441@inohm.com","recorded":"2024-11-13 22:03:04.210244745","filePath":"null","pinned":false},{"value":"con 700","recorded":"2024-11-13 21:57:19.825232129","filePath":"null","pinned":false},{"value":"Petzl - IKO CORE","recorded":"2024-11-13 21:48:07.474709382","filePath":"null","pinned":false},{"value":"Black Diamond - Icon 700 ","recorded":"2024-11-13 21:43:28.254860013","filePath":"null","pinned":false},{"value":"Sprinter 500 ","recorded":"2024-11-13 21:41:27.489408928","filePath":"null","pinned":false},{"value":"AES-256","recorded":"2024-11-13 14:22:38.042269698","filePath":"null","pinned":false},{"value":"select users.id, users.name, users.age, users.username, countries.name as country_name, sum(transactions.amount) as balance\nfrom users \nleft join transactions\nwhere transactions.was_successful = TRUE\non users.id = transactions.user_id\ninner join countries\non users.country_code = countries.country_code\ngroup by users.id ;","recorded":"2024-11-12 18:20:11.809079571","filePath":"null","pinned":false},{"value":"unction talk() {\n  let speech = '';\n  for (let i = 0; i \u003c 10000; i++) {\n    speech += 'blah ';\n  }\n  alert(speech);\n}","recorded":"2024-11-11 19:59:15.691361986","filePath":"null","pinned":false},{"value":"onTarget encountered exception accepting command : Error executing DDL \"create table user (user_id bigint not null, user_name varchar(255), primary key (user_id))\" via JDBC [Syntax error in SQL statement \"create table [*]user (user_id bigint not null, user_name varchar(255), primary key (user_id))\"; expected \"identifier\";]\n\norg.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL \"create table user (user_id bigint not null, user_name varchar(255), primary key (user_id))\" via JDBC [Syntax error in SQL statement \"create table [*]user (user_id bigint not null, user_name varchar(255), primary key (user_id))\"; expected \"identifier\";]","recorded":"2024-11-11 17:25:45.524091232","filePath":"null","pinned":false},{"value":"0","recorded":"2024-11-11 17:25:36.71423116","filePath":"null","pinned":false},{"value":"package StatApp.api.util;\n\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.GeneratedValue;\nimport jakarta.persistence.Id;\n\n@Entity\npublic class User {\n\n    @Id\n    @GeneratedValue\n    private Long userId;\n\n    private String userName;\n\n    public User(Long id, String userName) {\n        this.userId = id;\n        this.userName = userName;\n    }\n\n    public Long getUserId() {\n        return this.userId;\n    }\n\n    public void setUserId(Long userId) {\n        this.userId = userId;\n    }\n\n    public String getUserName() {\n        return this.userName;\n    }\n\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (this == obj)\n            return true;\n        if (obj == null)\n            return false;\n        if (getClass() != obj.getClass())\n            return false;\n        User other = (User) obj;\n        if (userId == null) {\n            if (other.userId != null)\n                return false;\n        } else if (!userId.equals(other.userId))\n            return false;\n        if (userName == null) {\n            if (other.userName != null)\n                return false;\n        } else if (!userName.equals(other.userName))\n            return false;\n        return true;\n    }\n\n}\n","recorded":"2024-11-11 17:23:14.047158137","filePath":"null","pinned":false},{"value":"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-210]] [n/a]","recorded":"2024-11-11 17:17:14.772456213","filePath":"null","pinned":false},{"value":"org.springframework.beans.factory.BeanCrea","recorded":"2024-11-11 17:17:13.059188505","filePath":"null","pinned":false},{"value":"g.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-210]] [n/a]","recorded":"2024-11-11 17:17:10.263797111","filePath":"null","pinned":false},{"value":"spring.jpa.database-platform=org.hibernate.dialect.H2Dialect","recorded":"2024-11-11 17:13:33.450110842","filePath":"null","pinned":false},{"value":"2024-11-11T17:11:28.177+01:00 ERROR 337158 --- [StatApp] [           main] j.LocalContainerEntityManagerFactoryBean : Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)","recorded":"2024-11-11 17:11:56.066716033","filePath":"null","pinned":false},{"value":"package StatApp.api.upload;\n\nimport java.util.logging.Logger;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseStatus;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport StatApp.api.util.Dataseries;\nimport StatApp.api.util.DataseriesRepository;\n\n@RestController\n@RequestMapping(\"/api\")\npublic class UploadController{\n\n    private final DataseriesRepository dataseriesRepository;\n    private static Logger logger = Logger.getLogger(\"Upload logger\");\n\n    @Autowired\n    public UploadController(DataseriesRepository dataseriesRepository){\n        this.dataseriesRepository = dataseriesRepository;\n    }\n\n    @PostMapping(\"/upload\")\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\n    public void uploadNewSeries(@RequestBody Dataseries data){\n        logger.finer(\"New data received\");\n        if(data.getData()==null){\n            throw new InvalidDataException(\"Missing Data\");\n        }\n        if(data.getUserId()==null){\n            throw new InvalidDataException(\"Missing UserId\");\n        }\n        this.dataseriesRepository.save(data);\n        logger.finer(\"New data uploaded\");\n    }\n\n    @GetMapping(\"/upload\")\n    public Iterable\u003cDataseries\u003e testUpload(){\n        return this.dataseriesRepository.findAll();\n    }\n}\n","recorded":"2024-11-11 16:24:24.160191802","filePath":"null","pinned":false},{"value":"docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.13-management","recorded":"2024-11-11 13:01:43.132026546","filePath":"null","pinned":false},{"value":"            vim.keymap.set(\"n\", \"[t\", function()\n                require(\"trouble\").next({skip_groups = true, jump = true});\n            end)\n\n            vim.keymap.set(\"n\", \"]t\", function()\n                require(\"trouble\").previous({skip_groups = true, jump = true});\n            end)","recorded":"2024-11-10 14:20:02.457066803","filePath":"null","pinned":false},{"value":"{\n  \"folke/trouble.nvim\",\n  opts = {}, -- for default options, refer to the configuration section for custom setup.\n  cmd = \"Trouble\",\n  keys = {\n    {\n      \"\u003cleader\u003exx\",\n      \"\u003ccmd\u003eTrouble diagnostics toggle\u003ccr\u003e\",\n      desc = \"Diagnostics (Trouble)\",\n    },\n    {\n      \"\u003cleader\u003exX\",\n      \"\u003ccmd\u003eTrouble diagnostics toggle filter.buf=0\u003ccr\u003e\",\n      desc = \"Buffer Diagnostics (Trouble)\",\n    },\n    {\n      \"\u003cleader\u003ecs\",\n      \"\u003ccmd\u003eTrouble symbols toggle focus=false\u003ccr\u003e\",\n      desc = \"Symbols (Trouble)\",\n    },\n    {\n      \"\u003cleader\u003ecl\",\n      \"\u003ccmd\u003eTrouble lsp toggle focus=false win.position=right\u003ccr\u003e\",\n      desc = \"LSP Definitions / references / ... (Trouble)\",\n    },\n    {\n      \"\u003cleader\u003exL\",\n      \"\u003ccmd\u003eTrouble loclist toggle\u003ccr\u003e\",\n      desc = \"Location List (Trouble)\",\n    },\n    {\n      \"\u003cleader\u003exQ\",\n      \"\u003ccmd\u003eTrouble qflist toggle\u003ccr\u003e\",\n      desc = \"Quickfix List (Trouble)\",\n    },\n  },\n}","recorded":"2024-11-10 14:17:52.910401745","filePath":"null","pinned":false},{"value":"  \"folke/trouble.nvim\",\n  opts = {}, -- for default options, refer to the configuration section for custom setup.\n  cmd = \"Trouble\",","recorded":"2024-11-10 14:14:11.561286221","filePath":"null","pinned":false}]}